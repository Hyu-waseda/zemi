多言語自動翻訳掲示板の利活用に関する実践研究

早稲田大学人間科学部人間情報科学科
西村研究室
学籍番号：1J20F037
名前：奥村飛悠

2023 年 12 月 1 日

目次

第1章

はじめに

2

1.1

現状 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2

1.2

翻訳技術の進歩 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

3

1.3

既存サービスと先行研究 . . . . . . . . . . . . . . . . . . . . . . . . .

3

1.4

本研究の概要と目的 . . . . . . . . . . . . . . . . . . . . . . . . . . .

4

多言語自動翻訳掲示板について

5

2.1

システムの概要 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5

2.2

主な機能と利用フロー . . . . . . . . . . . . . . . . . . . . . . . . . .

5

2.3

機能詳細と主な画面操作 . . . . . . . . . . . . . . . . . . . . . . . . .

6

2.4

システム構成の概要 . . . . . . . . . . . . . . . . . . . . . . . . . . . 10

2.5

コンポーネント設計 . . . . . . . . . . . . . . . . . . . . . . . . . . . 14

2.6

コンポーネントの詳細 . . . . . . . . . . . . . . . . . . . . . . . . . . 14

2.7

データ設計 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16

第2章

第3章

利活用についての分析

18

参考文献

19

1

第1章

はじめに

1.1 現状
インターネットの普及やソーシャルメディアの台頭により，オンラインでのコミュニ
ケーションが一般的になっている（大向，2006）. その中でも，誰でも気軽に参加する
ことのできる掲示板は重要なコミュニケーションの場となっている. 日本では，”5 ちゃ
んねる”（サイト名を”2 ちゃんねる”から”5 ちゃんねる”へ 2017 年 10 月に変更）が広
く知られている一方で，米国発の”reddit”は国際的に認知度が高く，日別のアクティブ
ユーザー数は 5700 万人，総投稿数は 130 億投稿を超えている (Reddit Inc，2023). こ
れらの大規模な掲示板は情報の集積場所として，またユーザー間の活発な議論の場と
して重要な役割を果たしている.
しかしながら，掲示板は誰もが利用できるコミュニケーションの場であるにも関わ
らず，現状ではそのコミュニケーションは主に同一言語間で行われている. 具体的に
は，”5 ちゃんねる”では主に日本語，”reddit”では主に英語が使用されている. そのた
め，異なる言語を使用するユーザーは，翻訳ツールや外部の翻訳サービスを頼るか，専
用のスレッドや言語コミュニティを探すことが一般的となっている. しかし，これらの
方法にはデメリットが存在する. 例えば，翻訳ツールを利用すると時間と手間がかか
るため，掲示板の持つ即時性や気軽さというメリットを十分に享受することが難しく
なる.
同一言語間でのコミュニケーションが主流となっている背後には複数の要因が考えら
れるが，その一つとして翻訳技術の品質が十分でなかったことが考えられる.2004 年に
は「コミュニケーションツールとして使用する場合に十分な品質を持っているとはい
い難い」（船越ほか，2004）との指摘があり，さらに 2010 年にも「近年，翻訳技術は
急速に進展しているが，高精度な翻訳を行うことは困難である．コミュニケーション
において，不適切な翻訳箇所を含む文章は話者間の相互理解を困難にし，円滑なコミュ

2

ニケーションの妨げとなる」（宮部ほか，2010）とも指摘されている. また，多言語間
でのコミュニケーションにおいては，翻訳の品質が極めて大きな影響力を持つことも
確認されている（船越ほか，2004）. このように，コミュニケーションに大きな影響を
与える翻訳技術の品質が十分でなかったため，ユーザーは翻訳技術を利用して会話の
中心となっている言語以外を使用してまで会話を試みなかったのではないだろうか.

1.2 翻訳技術の進歩
しかしながら，翻訳サービスの精度は日々向上している. これについて，
「近年，Google
翻訳や DeepL，そしてページ全体翻訳機能の進化が著しい」(村本，2022) との報告が
あり，その背景には機械学習の進歩が影響を与えている.「Google 英日翻訳が NMT
（ニューラル機械翻訳）を採用したことで，目標言語の流暢さが格段に向上した」(影浦，

2017) との報告がある. 同様に NMT を採用している DeepL は，2017 年にサービスを
開始し，その高品質な翻訳サービスが評価されている（亀田，2022）. さらに「2020 年
と 2021 年には，文章の意味をより正確に伝えられ，業界特有の専門用語もうまく処理
できる新たなモデルを発表」（DeepL，2023）している. これらのことから，翻訳サー
ビスの精度は日々向上されていることが分かる.
また，多くの翻訳サービスが開発者向けに API を提供している. その代表例として
は，Google Cloud の Translation AI（Google Cloud，2023）や DeepL API（DeepL，

2023）がある. これらのサービスを開発者が利用するための便利なライブラリも存在し
ている. 具体的には，Google Translate API（現在の Translation AI）を利用するため
の Python のライブラリである googletrans（PyPI，2023a）や deepl（PyPI，2023b）
がある. このような API やライブラリの存在により，開発者は翻訳機能を自身のサー
ビスに容易に組み込むことが可能となっている.

1.3 既存サービスと先行研究
過去には，”enjoy Korea”という日本語と韓国語の翻訳機能を持つ掲示板サービスが存
在していたが，利用率の低下を理由に 2009 年 6 月 8 日にサービスを終了している（野
津，2009）. また，小川ら（2009）は日本語とウイグル語間の翻訳掲示板システムを開
発している. しかし，彼らの研究は主にシステムの開発に焦点を当てており，システム
を使用するユーザーのデータ収集やその分析までには至っていない.
一方，藤井ら（2005）はアノテーションや折り返し翻訳に着目し，中国語，韓国語，日
本語間の翻訳 BBS である”AnnoChat”を開発した. 翻訳の精度がコミュニケーション
の理解度に影響を与える可能性を示しているが，ユーザー同士の具体的なコミュニケー

3

ションの内容までは調査していない. また，吉野ら（2006）はユーザインタフェースの
カスタマイズ性に焦点を当てた研究を行い，”CustomChat”というシステムを開発し
たが，これも具体的なチャットの内容などについては触れられていない.
これらの事例や研究を見ると，多言語間のコミュニケーションを可能にする翻訳掲示板
に関する研究やサービスは確かに存在している. しかし，それらは主にシステムの開発
や翻訳の精度と理解度の関係性，ユーザインタフェースの改良に焦点を当てており，異
なる言語を使用するユーザーがシステムをどのように使うのか，どのようなコミュニ
ケーションが起こるのかという点については，まだ十分に研究されていないと言える.

1.4 本研究の概要と目的
これらの背景から，本研究では，掲示板のグローバル化を進めるため，近年の高精度な
翻訳サービスを利用した多言語自動翻訳掲示板の開発とその利活用について実践的な
研究を行う. 我々が提案する多言語自動翻訳掲示板では，ユーザーは表示言語を選択す
ることにより，選択した言語で掲示板の投稿を閲覧することを可能にする機能をつけ
る. これにより，異なる言語を使用するユーザー間でも，自由なコミュニケーションが
促進され，掲示板の持つ即時性や気軽さというメリットを維持することができる.
そして，この掲示板をインターネット上に公開し，使用者から得られるデータを収集
する. その後，得られたデータを分析し，多言語自動翻訳掲示板がユーザーのコミュニ
ケーションにどのような影響を与えるのか，多言語自動翻訳掲示板上で異なる言語を
使用するユーザー同士がどのようなコミュニケーションをするのかを評価する. 具体的
には，ユーザー間のコミュニケーション量や内容，トピックの多様性，言語間のコミュ
ニケーション方法などを指標として用いる.
我々の研究は，新たな掲示板の形を示すだけでなく，機械翻訳技術とその実用化の進
歩に貢献することを期待している. 本研究の結果が，ユーザーが自由に多言語コミュニ
ケーションを享受できるインターネットの環境整備に向けた一歩となることを願って
いる.

4

第2章

多言語自動翻訳掲示板について

2.1 システムの概要
本研究では，多言語自動翻訳掲示板である「The Channel」という Web アプリケー
ションを開発した. このシステムは，世界中のユーザーが自分の言語で投稿することが
できる. そして，その投稿はユーザーが選択した言語に翻訳されて表示されることで，
ユーザーは好きな言語でコンテンツを読むことができる.
システムの中核は，機械翻訳技術が担っている. これにより，ユーザーが投稿したテキ
ストはリアルタイムで他の言語に翻訳され，多様なユーザーがアクセスできるように
なる. 例えば，日本語で書かれた投稿は，英語，スペイン語，中国語などに瞬時に翻訳
され，異なる言語のユーザー間の交流を可能にする.
システムは，掲示板として必要最低限の機能を備えている. ユーザーは簡単にスレッド
を作成することや，自分の母国語でコメントを投稿することができる.
セキュリティに考慮し，ユーザーの個人名やメールアドレス等を取り扱わないように
している.

2.2 主な機能と利用フロー
掲示板は以下の機能を持つ.

1. スレッド作成
スレッドの作成を行う.

2. コメント投稿
スレッドに対して，コメントを投稿する.

3. 閲覧
5

スレッドに投稿されたコメントの閲覧.

4. 言語選択
閲覧する言語を選択する.
以下にシステム利用フローを示す.

図 2.1: システム利用フロー

1. ユーザーはスレッド一覧やスレッドに投稿されたコメントを閲覧することがで
きる.

2. ユーザーは閲覧しているスレッドに対してコメントを投稿することができる.
3. ユーザーは自由にスレッドを作成することができる.
4. ユーザーはいつでも言語を選択することができる.

2.3 機能詳細と主な画面操作
主な画面のフローを以下に示す.

①トップページ画面

6

②スレッド詳細画面

③スレッド作成画面

④ヘッダ表示

7

⑤サイドメニュー表示

⑥言語選択表示

①トップページ画面
サイトの入り口. 表示したいスレッドを選択する画面である. スレッドリストから表示
したいスレッドを選択することで，詳細を表示することができる.
②スレッド詳細画面スレッドに投稿されたコメントの表示とコメントの投稿を行う画
面である. 表示下部のコメント投稿からコメントを投稿することができる.
③スレッド作成画面
スレッドを作成する画面である.
④ヘッダ表示
常に表示される.The Channel との表示部分をクリックするとトップページ画面に遷移
する. 左部にあるメニューボタンをクリックすると⑤サイドメニューが表示される. 右
部にある言語選択部分をクリックすると⑥言語選択が表示される.
⑤サイドメニュー表示
トップページボタンをクリックするとトップページ画面へ，スレッド作成ボタンをク

8

リックするとスレッド作成画面へ遷移する. サイドメニュー以外の部分をクリックする
とサイドメニューは閉じられる.
⑥言語選択表示
言語を選択するとその言語に翻訳された画面へと遷移する. 言語選択部分以外をクリッ
クすると閉じられる.
⑦フッタ表示
常に表示される. プライバシーポリシー，利用規約，免責事項へのリンクがある. 選択
したリンクのページへと遷移する.
以下では，各機能の詳細と画面操作を説明する.

1）スレッド詳細閲覧
スレッド詳細は，トップページ画面に表示されているスレッドリストからスレッドを
選択して表示する. スレッドでは，タイトル，概要が上部に表示される. コメントはそ
の下に連なって表示される. コメントはラベル部分とコメント部分に分かれる. ラベル
部分には，コメント番号，作成者名，投稿時間が表示される. コメント部分には，投稿
されているコメントが表示される.

2）スレッド作成
スレッドを作成することができる. スレッドのタイトル，作成者名，概要を入力する. 全
て必須項目であり，空欄があるとその旨を警告するエラーが表示され，スレッドを作成
することはできない.

3）コメント投稿
スレッドに対してコメントを投稿することができる. 作成者名とコメントを入力する.
コメントとのみ入力必須である. 作成者名が未入力であった場合は，コメントの作成者
名には”NO NAME”と表示される.

4）言語選択
閲覧するための言語を選択することができる. ヘッダ右部にある言語セレクター部分を
クリックすると，選択することができる言語がドロップダウンメニューとして表示さ
れる. 言語をクリックすると画面が更新され，その言語に翻訳された画面に遷移する.
ユーザーが選択できる言語は，日本語，英語，中国語，アラビア語，フランス語，スペ
イン語である. これらは，言語使用者が多い言語である.

5）スレッドリスト
ホーム画面に存在し，直近に更新があったスレッドと作成されたスレッドがそれぞれ 5
件ずつ表示される.5 件以上のスレッドが存在する場合は，リスト下部にあるページャー

9

を選択することで，表示されていないスレッドについても確認することができる.

6）ヘッダ
左部にあるメニューボタンをクリックするとサイドメニューを表示することができ
る.”The Channel”と書かれている部分を選択すると，どの画面からでもトップページ
画面に遷移することができる.

⑥言語選択表示

，height，height

2.4 システム構成の概要
本システムは，ユーザーが Web ブラウザを通じて掲示板にアクセスする構成を採用し
ている。

10

2.4.1 サーバーについて
サーバーは，さくら VPS を使用してる，オペレーティングシステムには Ubuntu

22.04.3 LTS を採用している。以下に，サーバーの CPU，ネットワークインターフェ
イスについての情報を記載する。
サーバーのメモリとストレージに関する情報は以下の通りである。

メモリ情報

• 合計: 7937 MB
• 使用中: 1534 MB
• 空き: 860 MB
• バッファ/キャッシュ: 5541 MB
• 利用可能: 6094 MB
• スワップ: 0 MB

ディスク使用状況

• ファイルシステム:
– tmpfs: 794 MB 使用中（1.4 MB 使用, 793 MB 空き）
– /dev/vda2: 788 GB 使用中（40 GB 使用, 708 GB 空き）

ディスク構成

• ディスク名: vda
• サイズ: 800 GB
• タイプ: ディスク
• パーティション:
– vda1: 1 MB
– vda2: 800 GB, マウントポイント: /
サーバーの CPU に関する情報は以下のとおりである.

• アーキテクチャ: x86 64
• CPU 操作モード: 32-bit，64-bit
• アドレスサイズ: 46 ビット物理，48 ビット仮想
11

• バイト順序: Little Endian
• CPU 総数: 6
• オンライン CPU リスト: 0-5
• ベンダー ID: GenuineIntel
• モデル名: Intel Xeon Processor (Cascadelake)
• CPU ファミリー: 6
• モデル: 85
• コアあたりのスレッド数: 1
• ソケットあたりのコア数: 1
• ソケット数: 6
• ステッピング: 5
• BogoMIPS: 4199.99
• サポートされているフラグ: [フラグのリスト]
• ハイパーバイザのベンダー: KVM
• 仮想化タイプ: 完全仮想化
• キャッシュの合計:
– L1d: 192KiB (6 インスタンス)
– L1i: 192KiB (6 インスタンス)
– L2: 24MiB (6 インスタンス)
• NUMA ノード数: 1
• NUMA ノード 0 CPU: 0-5
• 脆弱性と軽減策:
– L1tf: PTE Inversion による軽減
– Meltdown: PTI による軽減
– Spectre v1: ユーザーコピー/swapgs バリア，ユーザーポインターのサニタ
イズによる軽減

– Spectre v2: IBRS，IBPB 条件付き，STIBP 無効，RSB 充填，PBRSBeIBRS Not aﬀected による軽減
サーバーのネットワークインターフェイスの設定と状態は以下の通りである.

• br-f4387cc8d030:
– IP アドレス: 172.18.0.1/16
– MAC アドレス: 02:42:06:18:81:07
– 受信パケット: 851,033 (2.0 GB)
– 送信パケット: 893,012 (78.0 MB)
• docker0:

12

– IP アドレス: 172.17.0.1/16
– MAC アドレス: 02:42:bf:a4:bf:64
– 受信パケット: 6,763 (625.9 KB)
– 送信パケット: 7,761 (43.2 MB)

2.4.2 セキュリティ対策
セキュリティ対策として、ファイアウォール（UFW）が設定されている。以下にその
詳細を記載する。

• 状態: アクティブ
• ルール:
– ポート 22/tcp: 全てのアドレスからのアクセスを許可
– ポート 443/tcp: 全てのアドレスからのアクセスを許可
– IPv6 に関しても同様の設定

2.4.3 バックエンドについて
バックエンドの開発においては，複数のライブラリとフレームワークが使用されてい
る。このセクションでは，それらの技術とバージョンについて説明し，どのようにアプ
リケーションの機能と性能に貢献しているかを掘り下げる。ここにライブラリの詳細
を書き並べる。

2.4.4 フロントエンドについて
フロントエンドの開発には，特定のライブラリとツールが利用されている。このセク
ションでは，これらの技術の選択とそれらがインターフェイス構築や機能開発にどの
ように貢献するかについて述べる。ここにライブラリの詳細を書き並べる。

2.4.5 データベースについて
データベースとして MySQL が採用されている。このセクションでは，データベース
の構成と，それがシステムにどのように統合されているかについて説明する。

13

2.4.6 通信の取り扱いと Nginx の役割
本システムにおける通信は HTTPS を通じて行われ，セキュリティを確保しつつユー
ザーのリクエストを効率的に処理する。ユーザーは初めに Nginx を経由してフロント
エンドの画面にアクセスし，画面表示に必要なデータを取得する。また，ユーザーから
の POST アクセスは Nginx を通じてバックエンドに転送され，処理される。このセク
ションでは，Nginx がシステム内で果たす重要な役割と，それが通信プロセスにどのよ
うに統合されているかについて詳述する。

2.5 コンポーネント設計
この掲示板は，表示コンポーネント，データ取得コンポーネント，データ更新コンポー
ネントからなる. ユーザー側インターフェイスである Web ブラウザと通信するのは表
示コンポーネントである. 表示コンポーネントは，画面を表示するために必要なデータ
をデータ取得コンポーネントに要求する. データ取得コンポーネントは，その要求を読
み取り，適切に加工されたデータを表示コンポーネントに渡す. また，表示コンポーネ
ントは，ユーザーのスレッド作成やコメント投稿に応じてデータ更新コンポーネント
を呼び出し，処理を要求する. データ取得コンポーネントはその要求を読み取り，デー
タを適切に加工して保存する.
動的な文章の翻訳はデータ取得コンポーネントで行なっている. 表示コンポーネントが
データ取得コンポーネントに処理を要求する際，ユーザーが選択している言語の情報
を付属させる. データ取得コンポーネントはデータを取得した後，その言語に翻訳を行
い表示コンポーネントにデータを渡す. さらに，システムは翻訳の高速化と効率化のた
めにキャッシュ機能を実装している. 一度翻訳された文章はキャッシュに保存され，同
じ文章の再翻訳が必要な場合，システムはキャッシュから翻訳済みのデータを読み込
む. これにより，翻訳のたびに新たに翻訳を行う必要がなくなり，システムの応答時間
を大幅に短縮できる. このキャッシュシステムは，特に多言語での交流が活発な掲示板
において，ユーザー体験の向上に大きく寄与している.

2.6 コンポーネントの詳細
表示コンポーネント
表示コンポーネントは以下のような構成になっている.

14

図図図図図図図図図図図図図図図図図図図図図
ページはそれぞれ以下のファイルである.

• /pages/index.tsx … トップページ
• /pages/policy.tsx … プライバシーポリシーページ
• /pages/terms.tsx … 利用規約ページ
• /pages/404.tsx … 404 エラーページ
• /pages/thread/create.tsx … スレッド作成ページ
• /pages/thread/index.tsx … スレッドページ
表示の流れの図図図図図図図図図
図は，画面表示の際の表示コンポーネントの振る舞いをあらわしたものである. 表示コ
ンポーネントは，それぞのれページとそのページで使用される部品であるコンポーネ
ントから成り立っている. また，画像やアイコンに関して専用の public フォルダを用意
し，そこから読み込んでいる.

データ更新コンポーネント
データ更新コンポーネントは以下のような構成になっている.

• thread router.py … スレッド関連のルーティングを管理
• thread application.py … スレッドのアプリケーションロジックを処理
• thread infrastructure.py … スレッドのインフラストラクチャ関連処理
• comment router.py … コメント関連のルーティングを管理
• comment application.py … コメントのアプリケーションロジックを処理
• comment infrastructure.py … コメントのインフラストラクチャ関連処理
• translation.py … 翻訳機能の実装
上記のファイルリストは，以下のアーキテクチャを採用し作成された. このアーキテク
チャは，明確な役割と責任を持つ複数のレイヤーに分かれている.

■ルーターレイヤー

thread router.py と comment router.py はルーターレイ

ヤーに属し，外部からのリクエストを適切な処理ロジックに振り分ける役割を担う. こ
のレイヤーは，リクエストの初期解析とルーティングを行い，システムの入口点として
機能する.

15

■アプリケーションロジックレイヤー thread application.py と comment application.py
はアプリケーションロジックレイヤーを構成し，スレッドとコメントに関するビジネス
ロジックを実装する. このレイヤーは，アプリケーションの核心的な機能を担い，デー
タの処理やビジネスルールの適用を行う.

■インフラストラクチャレイヤー thread infrastructure.py と comment infrastructure.py
はインフラストラクチャレイヤーに属し，データベースとのやり取りやデータの永続
化を管理する. このレイヤーは，システムのデータ層に関わる処理を担当し，データの
整合性と安全性を保証する.

■翻訳機能

translation.py は，これらのレイヤーとは別に，システム全体の翻訳

機能を提供する. このファイルは，多言語サポートを実現し，異なる言語間でのコミュ
ニケーションを可能にする.
以上のように，各レイヤーは特定の役割を持ち，システム全体の効率的かつ整理された
運用を支援する. このレイヤー化されたアーキテクチャにより，システムの拡張性，保
守性，およびスケーラビリティが向上している.

2.7 データ設計
Threads テーブル
スレッドの情報を格納するテーブルである.
カラム名

データ型

説明

ThreadID

INT PRIMARY KEY AUTO INCREMENT

スレッドの ID

Title

VARCHAR(255)

スレッドのタイトル

CreatedAt

TIMESTAMP

作成日時

UpdatedAt

TIMESTAMP

更新日時

UserName

VARCHAR(255)

ユーザー名

Content

LONGTEXT

内容

Language

VARCHAR(8)

言語

Comments テーブル
スレッドに投稿されたコメントを格納するテーブルである.

16

カラム名

データ型

説明

CommentID

INT PRIMARY KEY AUTO INCREMENT

コメント ID

ThreadID

INT

スレッド ID

UserName

VARCHAR(255)

ユーザー名

Content

TEXT

コメント内容

CreatedAt

TIMESTAMP

作成日時

Language

VARCHAR(8)

言語

Cookie
Cookie を使用してユーザーの言語選択を記録し，その設定に基づいてユーザーに表示
する際に翻訳を行う. この機能により，ユーザーは毎回言語を選択する必要がなく，効
率的かつ快適にアプリを利用できる.

Cookie の名称

内容

SelectedLanguage

ユーザーが選択した言語設定

Cookie「SelectedLanguage」は，ユーザーが最後に選択した言語を記録するものであ
る. この情報は次回のウェブサイト訪問時に参照され，ユーザーが以前に選択した言語
でインターフェースが表示されるようになる. この機能はユーザビリティを向上させ，
多言語対応の効率を高める.

17

第3章

利活用についての分析

本研究で開発された多言語自動翻訳掲示板システムの利活用について分析するために
は，ユーザーに使用してもらうことが必要である. このシステムは，異なる文化や言語
背景を持つユーザーが交流し，情報を共有するためのプラットフォームとして機能す
ることを目的としている. 従って，多様なユーザーグループを獲得し，継続的に参加を
促すことは，システムの成功にとって非常に重要である.
システムの普及に際して，ソーシャルメディアは重要な役割を担う. 本研究では，

Twitter を用いてシステムの普及を図った.Twitter は広範なユーザーネットワークを
有し，迅速な情報伝播が可能であるため，新しいテクノロジーの告知に適したプラッ
トフォームである. このアプローチにより，ターゲットオーディエンスに直接アピール
し，関心を引きつけることが期待される.

18

参考文献

[1] 大向一輝 (2006). SNS の現在と展望-コミュニケーションツールから情報流通の基
盤へ-. 情報処理，47(9): 993-1000.

[2] 小川泰弘，福田ムフタル，外山勝彦 (2009). 日本語ーウイグル語翻訳掲示板シス
テム. 言語処理学会 第 15 回年次大会発表論文集，15: 212-215.

[3] 影浦峡 (2017). 改めて，翻訳とは何か：Google NMT が使える時代に. 言語処理
学会 第 23 回年次大会発表論文集，23: 931-934.

[4] 亀田倫史 (2022). 機械学習とバイオテクノロジー. 生物工学会誌，100(11): 588.
[5] 中澤敏明 (2017). 機械翻訳の新しいパラダイム：ニューラル機械翻訳の原理. 情報
管理，60(5): 299-306.

[6] 野 津 誠

(2009).

日 韓 翻 訳 掲 示 板「enjoy

へ ，理 由 は 利 用 率 の 低 下.

Korea」終 了

株 式 会 社 イ ン プ レ ス ，

https://internet.watch.impress.co.jp/cda/news/2009/02/12/22405.html#: :text=
会員数は非公開, にした」と説明する.（参照日 2023.07.17）

[7] 藤井薫和，重信智宏，吉野孝 (2005). 異文化間コミュニケーションのための機械
翻訳を用いたチャットシステム AnnoChat の開発と適用. 情報科学技術フォーラ
ム一般講演論文集，4(3): 437-438.

[8] 船越要，藤代祥之，野村早恵子，石田料亨 (2004). 機械翻訳を用いた協調作業支援
ツールへの要求条件̶日中韓馬異文化コラボレーション実験からの知見 . 情報処理
学会論文誌，45(1): 112-120.

[9] 宮部真衣，吉野孝 (2010). 機械翻訳を介したチャットコミュニケーションにおけ
る精度判定に基づく送信拒否の適用可能性. 情報処理学会論文誌，51(3): 784-795.

[10] 村本麻衣 (2022). 自動翻訳機能からの自立：学習者による気づきを通じて. ドイツ
語教育 = Deutschunterricht in Japan / 日本独文学会ドイツ語教育部会 編，26:

119-125.
[11] 吉野孝，藤井薫和，重信智宏 (2006). 異文化間コミュニケーションのためのカス
タマイズ可能なユーザインタフェイスを持つチャットシステム CustomChat の開
発. 情報処理学会研究報告 = IPSJ SIG technical reports，(60): 13-18.

[12] DeepL (2023). DeepL. https://jobs.deepl.com/（参照日 2023.07.08）
19

[13] Google Cloud (2023). Translation AI. https://cloud.google.com/translate?hl=ja
（参照日 2023.07.17）

[14] Loki Technology，Inc (2023). ５ ち ゃ ん ね る. https://5ch.net/（ 参 照 日
2023.07.17）
[15] PyPI（2023a）. googletrans 3.0.0. https://pypi.org/project/googletrans/（参
照日 2023.07.17）

[16] PyPI（2023b）.

deepl

1.15.0.

https://pypi.org/project/deepl/（ 参 照 日

2023.07.17）
[17] Reddit Inc (2023). reddit. https://www.redditinc.com/（参照日 2023.07.08）

20

